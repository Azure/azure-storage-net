Changes in 11.2.3:

- Fixed race conditions in OpenWrite, UploadFromStream.

Changes in 11.2.2:

- Fixed bug causing performance degradation on .NET Framework. Missing coverage for .NET Standard 1.3.

Changes in 11.2.1:

- Fixed bug causing performance degradation on .NET Framework.

Changes in 11.2.0:

- Updated REST version to 2019-07-07.
- Added support for encryption scope.

Changes in 11.1.7:

- None.

Changes in 11.1.6:

- Fixed bug where response streaming hangs indefinietly on .NET Framework. Eagerly dispose network stream if read timeout occurs.

Changes in 11.1.5:

- Fixed bug where egress bytes were not reported.

Changes in 11.1.4:

- Addressed GitHub Issue #908 - Unobserved exception was rethrown by the finalizer thread while using Storage Client.
- Fixed bug where XML response parsing hangs indefinietly. This also addresses GitHub issue #790 and #866. SDK will throw if configurable network read timeout occurs.

Changes in 11.1.3:

- Updated NuGet package description.

Changes in 11.1.2:

- None.

Changes in 11.1.1:

- Made .NET Core 2.0 CloudBlockBlob.PutBlock and .PutBlockAsync methods virtual

Changes in 11.1.0:

- None.

Changes in 11.0.1:

- Made CloudBlockBlob.PutBlock() checksum-related overloads public.

Changes in 11.0.0:

- Added support for CRC64
- Added support for server-side encryption with a client provided key.
- Added support for rehydrate blob priority.
- Added support for setting blob tier on block blobs.
- Added support for batch delete and set blob tier operations.
- Added support for echoed client ID validation.  If the service returns a different client ID than what was sent by the SDK, and exception will be thrown.
- Addressed GitHub Issue #894 and 909 - UploadFromStream throws OutOfMemoryException for large streams.  Thanks especially due to @markheath for providing some very useful clues to this and a related stack overflow problem.
- Addressed GitHub Issue #905 - XML documentation missing in NuGet package

Changes in 10.0.3:

- Add a public constructor to CloudBlobDirectory, resolving GitHub Issue #639 and #709
- Made CloudBlob.CopyState virtual, resolving GitHub Issue #692
- Fixed broken links in nuspec file, resolving GitHub Issue #879
- Updated nuspec .NET framework dependecy, resolving GitHub Issue #829
- Made metadata case-insensitive, resolving GitHub Issue #647

Changes in 10.0.2:

- Fixed GitHub Issue #475: ListBlobsSegmentedAsync throwing an exception when using a SAS url
- Fixed bug causing CloudBlob.GetUserDelegationSharedAccessSignature to generated invalid SAS signatures

Changes in 10.0.1:

- None

Changes in 10.0.0:

- Namespace change from Microsoft.WindowsAzure.Storage.* to Microsoft.Azure.Storage.*, required for SxS with pre-9.4 versions of the library.
- CloudAppendBlob.AppendBlock and CloudPageBlob.WritePages APIs now have maximal overloads that take a URI to a blob as a source.
- Added support for Snapshot SAS and Delegated SAS.

Changes in 9.4.2:

- Fixed issue where BlobReadStream.ReadAsync didn't appropriately use the passed in CancellationToken.
- Fixed issue where CloudBlob.StartCopyImpl didn't appropriately use the passed in CancellationToken.
- [GitHub Issue #755] Switch to use CounterEventAsync.

Changes in 9.4.1:

- Fix bug where certain content headers were not being sent to the server.
- Fix bug where passing a null progress handler could lead to a null reference exception.
- Added support for passing in a DelegatingHandler to use for HTTP calls.  A chain of DelegatingHandler instances is supported, but the innermost handler must have a null InnerHandler, which will be assigned our own HttpClientHandler instance for authentication purposes.  The DelegatingHandler can modify properties on the HttpClientHandler, such as Proxy.  This instance will be unique to the client in that case.  Not passing in a DelegatingHandler will continue to use a singleton HttpClientHandler.

Changes in 9.4.0:

- Feature parity with the 9.3.2 release of the non-split library.
- Removed support for PCL and NetStandard 1.0.
- Moving back to using Microsoft.WindowsAzure.Storage instead of Microsoft.Azure.Storage.  This is a temporary change to ease the transition for existing libraries.  The namespace will change back at a future time.

Changes in 9.4.0-preview:

- WinRT/WinPhoneRT: Removed support for Windows8.1 and WindowsPhone 8.1 in favor of UWP support through Netstandard2.0.
- Added NetStandard2.0 target support.
- Desktop: Transitioned from HttpWebRequest to HttpClient in all the protocol layer APIs and classes. 
- NetStandard2.0: Added support for synchronous methods. Please note that the synchrounous APIs are wrappers over the asynchronous APIs (sync-over-async) due to transition to HttpClient which does not offer a true sync functionality.
- NetStandard2.0: Added support for Client Side Encryption.
- All: Updated Get*BlobReference APIs to inherit the existing ServiceClient instance.
- All: Removed the un-necessary stream wrapping when progress tracking is not requested.
- Blob(RT/NetCore): Removed Task.Run from CloudBlob Undelete API.

Changes in 9.0.0-preview:
- All: Support for 2017-07-29 REST version. Please see our REST API documentation and blogs for information about the related added features. If you are using the Storage Emulator, please update to Emulator version 5.3.
- Blobs : Added support for soft delete feature. If a delete retention policy is enabled through the set service properties API, then blobs or snapshots can be deleted softly and retained for a specified number of days, before being permanently removed by garbage collection.
- Queues: Added support for infinite TTL on queue messages.
- All:  When a storage request fails, the error code may now be retrieved directly from the RequestResult and StorageException classes. This error code is populated even in cases where there is no ExtendedErrorInformation available, such as in calls to FetchAttributes.
- All: Upgarded NewtonSoft.json dependency to 10.0.2.
- All: Upgraded Netstandard dependency to 1.6.1.
- All (RT/NetCore): Improved performance by avoiding Task.Run
- Blobs (RT/NetCore): Fixed an infinite loop bug for StartCopyAsync API on PageBlob.


Changes in 8.7.0-preview:

- Removed support for WindowsPhone8.
- Windows8.0 target is replaced with Windows8.1.
- Removed Analytics client support.
- Removed support for copy APIs with a source of CloudFile type.